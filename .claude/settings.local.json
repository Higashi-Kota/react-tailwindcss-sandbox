{
  "permissions": {
    "allow": [
      "mcp__serena__activate_project",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__onboarding",
      "mcp__serena__list_dir",
      "mcp__serena__write_memory",
      "mcp__serena__think_about_whether_you_are_done",
      "mcp__serena__search_for_pattern",
      "mcp__serena__find_file"
    ],
    "deny": [
      "Bash(vi *.env*)",
      "Bash(vim *.env*)",
      "Bash(view *.env*)",
      "Bash(nano *.env*)",
      "Bash(emacs *.env*)",
      "Bash(cat *.env*)",
      "Bash(less *.env*)",
      "Bash(more *.env*)",
      "Bash(head *.env*)",
      "Bash(tail *.env*)",
      "Bash(grep *.env*)",
      "Bash(ls *.env*)",
      "Bash(find *-name *.env*)",
      "Bash(docker exec *)",
      "Bash(docker run *bash*)",
      "Bash(docker run *sh*)",
      "Bash(kubectl exec *)",
      "Bash(ssh *)",
      "Bash(scp *.env*)",
      "Bash(rsync *.env*)",
      "Bash(curl */.env*)",
      "Bash(wget */.env*)",
      "Bash(rm -rf /)",
      "Bash(rm -rf /*)",
      "Bash(chmod 777 /)",
      "Bash(chown -R *:* /)",
      "Bash(dd if=/dev/zero of=/dev/*)",
      "Bash(mkfs *)",
      "Bash(format *)",
      "Bash(:(){ :|:& };:)",
      "Bash(fork bomb*)",
      "Bash(python -c *)",
      "Bash(perl -e *)",
      "Bash(ruby -e *)",
      "Bash(node -e *)",
      "Bash(php -r *)",
      "Bash(bash -c *)",
      "Bash(sh -c *)",
      "Bash(eval *)",
      "Bash(exec *)",
      "Bash(source /dev/*)",
      "Bash(. /dev/*)",
      "Bash(history -c)",
      "Bash(history -w)",
      "Bash(unset HISTFILE)",
      "Bash(export HISTFILE=/dev/null)",
      "Bash(export HISTSIZE=0)",
      "Bash(kill -9 -1)",
      "Bash(killall -9 *)",
      "Bash(pkill -9 *)",
      "Bash(shutdown *)",
      "Bash(reboot *)",
      "Bash(halt *)",
      "Bash(poweroff *)",
      "Bash(init 0)",
      "Bash(init 6)",
      "Bash(telinit 0)",
      "Bash(telinit 6)",
      "Bash(systemctl poweroff)",
      "Bash(systemctl reboot)",
      "Bash(systemctl halt)",
      "Bash(crontab -r)",
      "Bash(at -r *)",
      "Bash(passwd *)",
      "Bash(usermod *)",
      "Bash(useradd *)",
      "Bash(userdel *)",
      "Bash(groupmod *)",
      "Bash(groupadd *)",
      "Bash(groupdel *)",
      "Bash(chpasswd *)",
      "Bash(sudo *)",
      "Bash(su *)",
      "Bash(doas *)",
      "Bash(visudo *)",
      "Bash(vipw *)",
      "Bash(vigr *)",
      "Bash(nc -l *)",
      "Bash(netcat -l *)",
      "Bash(socat *)",
      "Bash(nmap *)",
      "Bash(masscan *)",
      "Bash(nikto *)",
      "Bash(metasploit *)",
      "Bash(msfconsole *)",
      "Bash(hydra *)",
      "Bash(john *)",
      "Bash(hashcat *)",
      "Bash(aircrack-ng *)",
      "Bash(sqlmap *)",
      "Bash(burpsuite *)",
      "Bash(wireshark *)",
      "Bash(tcpdump *)",
      "Bash(ettercap *)",
      "Bash(arpspoof *)",
      "Bash(dnsspoof *)",
      "Bash(mitmproxy *)",
      "Bash(sslstrip *)",
      "Bash(beef *)",
      "Bash(setoolkit *)",
      "Bash(wpscan *)",
      "Bash(dirb *)",
      "Bash(gobuster *)",
      "Bash(dirbuster *)",
      "Bash(ffuf *)",
      "Bash(wfuzz *)",
      "Bash(git show *.env*)",
      "Bash(git show *:.env*)",
      "Bash(git show *:*.env*)",
      "Bash(git log -p *.env*)",
      "Bash(git log --patch *.env*)",
      "Bash(git log -p -- *.env*)",
      "Bash(git diff *.env*)",
      "Bash(git diff HEAD *.env*)",
      "Bash(git diff-tree *.env*)",
      "Bash(git diff-files *.env*)",
      "Bash(git diff-index *.env*)",
      "Bash(git checkout -- *.env*)",
      "Bash(git restore *.env*)",
      "Bash(git cat-file *:.env*)",
      "Bash(git cat-file blob *)",
      "Bash(git archive *)",
      "Bash(git rev-list --all -- *.env*)",
      "Bash(git blame *.env*)",
      "Bash(git annotate *.env*)",
      "Bash(git cherry-pick *)",
      "Bash(git rebase -i *)",
      "Bash(git reset *.env*)",
      "Bash(git stash show -p)",
      "Bash(git stash apply)",
      "Bash(git stash pop)",
      "Bash(git reflog show)",
      "Bash(git filter-repo *)",
      "Bash(git bundle *)",
      "Bash(git format-patch *)",
      "Bash(git bisect *)",
      "Bash(git ls-tree *)",
      "Bash(git ls-files *.env*)",
      "Bash(git ls-files --deleted *.env*)",
      "Bash(git ls-files -d *.env*)",
      "Bash(git merge *)",
      "Bash(git apply *)",
      "Bash(git am *)",
      "Bash(git notes *)",
      "Bash(git replace *)",
      "Bash(git rerere *)",
      "Bash(git shortlog -p *)",
      "Bash(git fsck *)",
      "Bash(git verify-pack *)",
      "Bash(git unpack-objects *)",
      "Bash(git hash-object *.env*)",
      "Bash(git update-ref *)",
      "Bash(git symbolic-ref *)",
      "Bash(git read-tree *)",
      "Bash(git write-tree *)",
      "Bash(git commit-tree *)",
      "Bash(git mktag *)",
      "Bash(git mktree *)",
      "Bash(git fmt-merge-msg *)",
      "Bash(git --no-replace-objects *)",
      "Bash(git --bare *)",
      "Bash(git --git-dir *)",
      "Bash(git push --force)",
      "Bash(git reset --hard HEAD~*)",
      "Bash(git clean -fdx)",
      "Bash(git filter-branch *)",
      "Bash(iptables -F)",
      "Bash(iptables -X)",
      "Bash(iptables -P * DROP)",
      "Bash(ufw disable)",
      "Bash(setenforce 0)",
      "Bash(systemctl stop firewalld)",
      "Bash(systemctl disable firewalld)",
      "Bash(modprobe -r *)",
      "Bash(rmmod *)",
      "Bash(insmod *)",
      "Bash(lsmod | xargs rmmod)",
      "Bash(echo * > /proc/*)",
      "Bash(echo * > /sys/*)",
      "Bash(echo * > /dev/*)",
      "Bash(mknod *)",
      "Bash(mkfifo /tmp/*)",
      "Bash(mount -o remount,rw /)",
      "Bash(mount /dev/* /mnt)",
      "Bash(cryptsetup *)",
      "Bash(truecrypt *)",
      "Bash(veracrypt *)",
      "Bash(shred *)",
      "Bash(wipe *)",
      "Bash(scrub *)",
      "Bash(bleachbit *)",
      "Bash(dban *)",
      "Bash(photorec *)",
      "Bash(testdisk *)",
      "Bash(foremost *)",
      "Bash(scalpel *)",
      "Bash(binwalk *)",
      "Bash(volatility *)",
      "Bash(gdb *)",
      "Bash(lldb *)",
      "Bash(strace *)",
      "Bash(ltrace *)",
      "Bash(ptrace *)",
      "Bash(dtrace *)",
      "Bash(perf *)",
      "Bash(oprofile *)",
      "Bash(valgrind *)",
      "Bash(radare2 *)",
      "Bash(rizin *)",
      "Bash(ida *)",
      "Bash(ghidra *)",
      "Bash(x64dbg *)",
      "Bash(ollydbg *)",
      "Bash(immunity *)",
      "Bash(hopper *)",
      "Bash(binary ninja *)",
      "Bash(angr *)",
      "Bash(z3 *)",
      "Bash(afl *)",
      "Bash(libfuzzer *)",
      "Bash(honggfuzz *)",
      "Bash(qemu *)",
      "Bash(unicorn *)",
      "Bash(bochs *)",
      "Bash(dosbox *)",
      "Bash(wine *)",
      "Bash(docker pull *)",
      "Bash(docker build *)",
      "Bash(docker push *)",
      "Bash(docker save *)",
      "Bash(docker load *)",
      "Bash(docker export *)",
      "Bash(docker import *)",
      "Bash(docker network *)",
      "Bash(docker volume *)",
      "Bash(docker swarm *)",
      "Bash(docker-compose up -d)",
      "Bash(docker-compose down -v)",
      "Bash(kubectl delete *)",
      "Bash(kubectl apply *)",
      "Bash(kubectl create *)",
      "Bash(kubectl expose *)",
      "Bash(kubectl port-forward *)",
      "Bash(kubectl proxy *)",
      "Bash(helm install *)",
      "Bash(helm upgrade *)",
      "Bash(helm delete *)",
      "Bash(terraform destroy *)",
      "Bash(terraform apply -auto-approve)",
      "Bash(ansible-playbook *)",
      "Bash(puppet apply *)",
      "Bash(chef-client *)",
      "Bash(salt '*' *)",
      "Bash(vagrant destroy *)",
      "Bash(vboxmanage *)",
      "Bash(virsh destroy *)",
      "Bash(virsh undefine *)",
      "Bash(aws ec2 terminate-instances *)",
      "Bash(aws s3 rm *)",
      "Bash(aws s3 rb *)",
      "Bash(gcloud compute instances delete *)",
      "Bash(gcloud projects delete *)",
      "Bash(az vm delete *)",
      "Bash(az group delete *)",
      "Bash(doctl compute droplet delete *)",
      "Bash(linode-cli linodes delete *)",
      "Bash(vultr instance delete *)",
      "Bash(openstack server delete *)",
      "Bash(nova delete *)",
      "Bash(heroku apps:destroy *)",
      "Bash(cf delete *)",
      "Bash(npm publish)",
      "Bash(yarn publish)",
      "Bash(pip upload *)",
      "Bash(gem push *)",
      "Bash(cargo publish)",
      "Bash(mvn deploy *)",
      "Bash(gradle publish *)",
      "Bash(dotnet nuget push *)",
      "Bash(composer publish *)",
      "Bash(mix hex.publish)",
      "Bash(rebar3 hex publish)",
      "Bash(pod trunk push *)",
      "Bash(flutter pub publish)",
      "Bash(dart pub publish)",
      "Bash(go mod download)",
      "Bash(dep ensure)",
      "Bash(glide install)",
      "Bash(godep save)",
      "Bash(gx publish)",
      "Bash(bower register *)",
      "Bash(jspm publish)",
      "Bash(lerna publish)",
      "Bash(rush publish)",
      "Bash(nx affected:deploy)",
      "Bash(bazel build //...)",
      "Bash(buck build //...)",
      "Bash(gradle build --no-daemon)",
      "Bash(mvn clean install)",
      "Bash(ant build)",
      "Bash(make install)",
      "Bash(cmake --build . --target install)",
      "Bash(ninja install)",
      "Bash(meson install)",
      "Bash(scons install)",
      "Bash(waf install)",
      "Bash(autoconf)",
      "Bash(automake)",
      "Bash(./configure)",
      "Bash(ldconfig)",
      "Bash(pkg-config *)",
      "Bash(apt-get install *)",
      "Bash(apt install *)",
      "Bash(apt-get remove *)",
      "Bash(apt remove *)",
      "Bash(apt-get purge *)",
      "Bash(apt purge *)",
      "Bash(apt-get autoremove *)",
      "Bash(apt autoremove *)",
      "Bash(apt-get update)",
      "Bash(apt update)",
      "Bash(apt-get upgrade *)",
      "Bash(apt upgrade *)",
      "Bash(apt-get dist-upgrade *)",
      "Bash(apt dist-upgrade *)",
      "Bash(dpkg -i *)",
      "Bash(dpkg -r *)",
      "Bash(dpkg -P *)",
      "Bash(dpkg --configure *)",
      "Bash(dpkg-reconfigure *)",
      "Bash(yum install *)",
      "Bash(yum remove *)",
      "Bash(yum erase *)",
      "Bash(yum update *)",
      "Bash(yum upgrade *)",
      "Bash(yum downgrade *)",
      "Bash(yum reinstall *)",
      "Bash(yum localinstall *)",
      "Bash(rpm -i *)",
      "Bash(rpm -U *)",
      "Bash(rpm -e *)",
      "Bash(rpm --import *)",
      "Bash(dnf install *)",
      "Bash(dnf remove *)",
      "Bash(dnf erase *)",
      "Bash(dnf update *)",
      "Bash(dnf upgrade *)",
      "Bash(dnf downgrade *)",
      "Bash(dnf reinstall *)",
      "Bash(zypper install *)",
      "Bash(zypper remove *)",
      "Bash(zypper update *)",
      "Bash(zypper dup *)",
      "Bash(zypper patch *)",
      "Bash(pacman -S *)",
      "Bash(pacman -R *)",
      "Bash(pacman -U *)",
      "Bash(pacman -Syu)",
      "Bash(pacman -Syyu)",
      "Bash(yay -S *)",
      "Bash(yay -R *)",
      "Bash(yay -Syu)",
      "Bash(snap install *)",
      "Bash(snap remove *)",
      "Bash(snap refresh *)",
      "Bash(flatpak install *)",
      "Bash(flatpak uninstall *)",
      "Bash(flatpak update *)",
      "Bash(brew install *)",
      "Bash(brew uninstall *)",
      "Bash(brew upgrade *)",
      "Bash(brew update)",
      "Bash(brew tap *)",
      "Bash(brew untap *)",
      "Bash(port install *)",
      "Bash(port uninstall *)",
      "Bash(port upgrade *)",
      "Bash(port selfupdate)",
      "Bash(pkg install *)",
      "Bash(pkg delete *)",
      "Bash(pkg upgrade *)",
      "Bash(pkg update)",
      "Bash(emerge *)",
      "Bash(cave resolve *)",
      "Bash(equo install *)",
      "Bash(nix-env -i *)",
      "Bash(nix-env -e *)",
      "Bash(nix-env -u *)",
      "Bash(guix package -i *)",
      "Bash(guix package -r *)",
      "Bash(guix package -u *)",
      "Bash(opkg install *)",
      "Bash(opkg remove *)",
      "Bash(opkg upgrade *)",
      "Bash(apk add *)",
      "Bash(apk del *)",
      "Bash(apk upgrade *)",
      "Bash(xbps-install *)",
      "Bash(xbps-remove *)",
      "Bash(xbps-install -Su)",
      "Bash(slackpkg install *)",
      "Bash(slackpkg remove *)",
      "Bash(slackpkg upgrade-all)",
      "Bash(installpkg *)",
      "Bash(removepkg *)",
      "Bash(upgradepkg *)",
      "Bash(sbopkg -i *)",
      "Bash(sbopkg -r *)",
      "Bash(slapt-get --install *)",
      "Bash(slapt-get --remove *)",
      "Bash(slapt-get --upgrade)",
      "Bash(swupd bundle-add *)",
      "Bash(swupd bundle-remove *)",
      "Bash(swupd update)",
      "Bash(eopkg install *)",
      "Bash(eopkg remove *)",
      "Bash(eopkg upgrade *)",
      "Bash(cards install *)",
      "Bash(cards remove *)",
      "Bash(cards upgrade *)",
      "Bash(lunar install *)",
      "Bash(lunar remove *)",
      "Bash(lunar update *)",
      "Bash(cast *)",
      "Bash(dispel *)",
      "Bash(sorcery upgrade)",
      "Bash(pisi install *)",
      "Bash(pisi remove *)",
      "Bash(pisi upgrade *)",
      "Bash(pkcon install *)",
      "Bash(pkcon remove *)",
      "Bash(pkcon update *)",
      "Bash(tdnf install *)",
      "Bash(tdnf remove *)",
      "Bash(tdnf update *)",
      "Bash(urpmi *)",
      "Bash(urpme *)",
      "Bash(urpmi.update *)",
      "Bash(smart install *)",
      "Bash(smart remove *)",
      "Bash(smart upgrade *)",
      "Bash(prt-get install *)",
      "Bash(prt-get remove *)",
      "Bash(prt-get sysup)",
      "Bash(pkgutil -i *)",
      "Bash(pkgutil -r *)",
      "Bash(pkgutil -u *)",
      "Bash(pkg_add *)",
      "Bash(pkg_delete *)",
      "Bash(pkgin install *)",
      "Bash(pkgin remove *)",
      "Bash(pkgin upgrade *)",
      "Bash(installp *)",
      "Bash(lslpp *)",
      "Bash(rpm.rte *)",
      "Bash(swinstall *)",
      "Bash(swremove *)",
      "Bash(swmodify *)",
      "Bash(pkgadd *)",
      "Bash(pkgrm *)",
      "Bash(pkginfo *)",
      "Bash(ips install *)",
      "Bash(ips uninstall *)",
      "Bash(ips update *)"
    ]
  }
}
